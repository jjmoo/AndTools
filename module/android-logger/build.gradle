apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    //noinspection GradleDependency
    buildToolsVersion "$build_tools_version"
    compileSdkVersion "$compile_sdk_version".toInteger()
    defaultConfig {
        minSdkVersion "$min_sdk_version".toInteger()
        targetSdkVersion "$target_sdk_version".toInteger()

        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api 'org.slf4j:slf4j-api:1.7.30'
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

group 'com.jjmoo'
version "$library_logger_version"
String artifactName = 'android-logger'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
String nexusUserName = properties.get('nexus.username')
String nexusPassword = properties.get('nexus.password')

def getUrl() {
    if (version.endsWith("LOCAL")) {
        return uri('../../repo')
    } else if (version.endsWith("SNAPSHOT")) {
        return url_snapshot
    } else {
        return url_release
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                deployment -> signing.signPom(deployment)
            }
            repository(url: getUrl()) {
                authentication(userName: nexusUserName, password: nexusPassword)
            }
            pom.project {
                name artifactName
                packaging 'jar'
                description description_appjoint_plugin
                url url_github
                scm {
                    url url_github
                    connection url_github
                    developerConnection url_github
                }
                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'zohn'
                        name 'Zohn Peng'
                        email 'pengzhuo1993@foxmail.com'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
repositories {
    mavenCentral()
}
