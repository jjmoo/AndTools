group 'com.jjmoo'
version '0.1-LOCAL'
//version '0.1-SNAPSHOT'
//version '0.1'

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

String artifactName = 'appjoint-plugin'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
String nexusUserName = properties.get('nexus.username')
String nexusPassword = properties.get('nexus.password')

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    //noinspection GradleDependency
    implementation 'org.ow2.asm:asm:5.1'
    implementation 'commons-io:commons-io:2.6'
    //noinspection GradleDependency
    implementation 'com.android.tools.build:gradle-api:3.2.1'
}

def getUrl() {
    if (version.endsWith("LOCAL")) {
        return uri('../../repo')
    } else if (version.endsWith("SNAPSHOT")) {
        return url_snapshot
    } else {
        return url_release
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                deployment -> signing.signPom(deployment)
            }
            repository(url: getUrl()) {
                authentication(userName: nexusUserName, password: nexusPassword)
            }
            pom.project {
                name artifactName
                packaging 'jar'
                description description_appjoint_plugin
                url url_github
                scm {
                    url url_github
                    connection url_github
                    developerConnection url_github
                }
                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'zohn'
                        name 'Zohn Peng'
                        email 'pengzhuo1993@foxmail.com'
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
